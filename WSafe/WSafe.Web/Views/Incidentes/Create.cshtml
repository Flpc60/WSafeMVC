@model WSafe.Web.Models.IncidenteViewModel

@{
    ViewBag.Title = "WSafe";
}

<h2>Ingresar incidente</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Zonas, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownListFor(model => model.ZonaID, Model.Zonas, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ZonaID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Procesos, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownListFor(model => model.ProcesoID, Model.Procesos, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProcesoID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Actividades, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownListFor(model => model.ActividadID, Model.Actividades, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ActividadID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tareas, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownListFor(model => model.TareaID, Model.Tareas, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TareaID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FechaReporte, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.FechaReporte, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FechaReporte, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FechaIncidente, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.FechaIncidente, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FechaIncidente, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoriasIncidente, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EnumDropDownListFor(model => model.CategoriasIncidente, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoriasIncidente, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IncapacidadMedica, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IncapacidadMedica)
                    @Html.ValidationMessageFor(model => model.IncapacidadMedica, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                @Html.LabelFor(model => model.TrabajadorID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    <button id="addAccident" class="btn btn-danger" value="Personas involucradas"></button>
                </div>
                <div id="newAccident" class="col-md-4"></div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DiasIncapacidad, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.DiasIncapacidad, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DiasIncapacidad, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NaturalezaLesion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NaturalezaLesion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NaturalezaLesion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PartesAfectadas, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PartesAfectadas, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PartesAfectadas, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TipoIncidente, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TipoIncidente, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TipoIncidente, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AgenteLesion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AgenteLesion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AgenteLesion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ActosInseguros, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ActosInseguros, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ActosInseguros, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CondicionesInsegura, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CondicionesInsegura, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CondicionesInsegura, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TipoDaño, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TipoDaño, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TipoDaño, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Afectacion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Afectacion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Afectacion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DañosOcasionados, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DañosOcasionados, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DañosOcasionados, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TipoVehiculo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.TipoVehiculo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TipoVehiculo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MarcaVehiculo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.MarcaVehiculo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MarcaVehiculo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ModeloVehiculo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.ModeloVehiculo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ModeloVehiculo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.KilometrajeVehiculo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.KilometrajeVehiculo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.KilometrajeVehiculo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CostosEstimados, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.CostosEstimados, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CostosEstimados, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DescripcionIncidente, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.DescripcionIncidente, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DescripcionIncidente, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EvitarIncidente, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EvitarIncidente, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EvitarIncidente, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AccionesInmediatas, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AccionesInmediatas, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AccionesInmediatas, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ComentariosAdicionales, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ComentariosAdicionales, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ComentariosAdicionales, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AtencionBrindada, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AtencionBrindada, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AtencionBrindada, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EquiposInvestigador, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EnumDropDownListFor(model => model.EquiposInvestigador, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EquiposInvestigador, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LesionPersonal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EnumDropDownListFor(model => model.LesionPersonal, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LesionPersonal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DañoMaterial, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EnumDropDownListFor(model => model.DañoMaterial, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DañoMaterial, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MedioAmbiente, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EnumDropDownListFor(model => model.MedioAmbiente, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MedioAmbiente, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Imagen, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EnumDropDownListFor(model => model.Imagen, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Imagen, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RequiereInvestigacion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                <div class="checkbox">
                    @Html.EditorFor(model => model.RequiereInvestigacion)
                    @Html.ValidationMessageFor(model => model.RequiereInvestigacion, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConsecuenciasLesion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EnumDropDownListFor(model => model.ConsecuenciasLesion, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ConsecuenciasLesion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConsecuenciasDaño, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EnumDropDownListFor(model => model.ConsecuenciasDaño, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ConsecuenciasDaño, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConsecuenciasMedio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EnumDropDownListFor(model => model.ConsecuenciasMedio, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ConsecuenciasMedio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConsecuenciasImagen, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EnumDropDownListFor(model => model.ConsecuenciasImagen, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ConsecuenciasImagen, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Probabilidad, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EnumDropDownListFor(model => model.Probabilidad, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Probabilidad, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div id="accidented" style="overflow-x:auto;">
    <table class="table" id="personAccident">
        <tr style="background-color:gainsboro">
            <th>
                Documento
            </th>
            <th>
                Nombres
            </th>
            <th>
                Cargo
            </th>
            <th>
                Fecha ingreso
            </th>
        <tbody id="myTable">

        </tbody>
    </table>

</div>

<div>
    @Html.ActionLink("Volver a la lista", "Index")
</div>

@section Scripts
{
    <script type="text/javascript">

        function llenarTabla(doc, nom, cargo, fecha) {
            var tabla = document.getElementById("personAccident");
            tabla.empty();
            var hilera = "";
            var celda = "";
            var textoCelda = "";

            // Columna 1
            hilera = document.createElement("tr");
            celda = document.createElement("td");
            textoCelda = document.createTextNode(doc.value);
            celda.appendChild(textoCelda);
            hilera.appendChild(celda);
            tabla.appendChild(hilera);

            // Columna 2
            hilera = document.createElement("tr");
            celda = document.createElement("td");
            textoCelda = document.createTextNode(nom.value);
            celda.appendChild(textoCelda);
            hilera.appendChild(celda);
            tabla.appendChild(hilera);

            // Columna 3
            hilera = document.createElement("tr");
            celda = document.createElement("td");
            textoCelda = document.createTextNode(cargo.value);
            celda.appendChild(textoCelda);
            hilera.appendChild(celda);
            tabla.appendChild(hilera);

            // Columna 4
            hilera = document.createElement("tr");
            celda = document.createElement("td");
            textoCelda = document.createTextNode(fecha.value);
            celda.appendChild(textoCelda);
            hilera.appendChild(celda);
            tabla.appendChild(hilera);
        };

        $('#addAccident').change(function () {
            var workSelect = $('#work').val();
            workSelect.empty();
            $.getJSON('@Url.Action("GetTrabajadores")', function (works)
            {
                if (works != null && !jQuery.isEmptyObject(works))
                {
                    $.each(works, function (index, item)
                    {
                        workSelect.append($('<option />',
                        {
                            value: item.Value,
                            text: item.Text
                        }));
                    });
                };
            });

            $('<div id="newAccident"></div>')
                .html
                (
                    '@Html.DropDownListFor(model => model.TrabajadorID, Model.Trabajadores, new { @class = "form-control", @id = "work" })'+
                     '/n'+'@Html.ValidationMessageFor(model => model.TrabajadorID, "", new { @class = "text-danger" })'
                ).appendTo('body');
        });

        $('#work').change(function () {
            var procesosSelect = $('#proceso').val();
            procesosSelect.empty();
            $.getJSON('@Url.Action("GetProcesos")', function (procesos)
            {
                if (procesos != null && !jQuery.isEmptyObject(procesos))
                {
                    $.each(procesos, function (index, item)
                    {
                        procesosSelect.append($('<option />',
                        {
                            value: item.Value,
                            text: item.Text
                        }));
                    });
                };
            });
        });

        $('#activity').change(function () {
            var activitySelect = $('#activity').val();
            activitySelect.empty();
            $.getJSON('@Url.Action("GetActivities")', function (activities)
            {
                if (activities != null && !jQuery.isEmptyObject(activities))
                {
                    $.each(activities, function (index, item)
                    {
                        activitySelect.append($('<option />',
                        {
                            value: item.Value,
                            text: item.Text
                        }));
                    });
                };
            });
        });

        $('#tarea').change(function () {
            var tareasSelect = $('#tarea').val();
            tareasSelect.empty();
            $.getJSON('@Url.Action("GetTareas")', function (tareas)
            {
                if (tareas != null && !jQuery.isEmptyObject(tareas))
                {
                    $.each(tareas, function (index, item)
                    {
                        tareasSelect.append($('<option />',
                        {
                            value: item.Value,
                            text: item.Text
                        }));
                    });
                };
            });
        });

        $('#categoria').change(function () {
            var selectedCategoria = $("#categoria").val();
            var peligroSelect = $('#peligro');
            peligroSelect.empty();
            if (selectedCategoria != null && selectedCategoria != '')
            {
                $.getJSON('@Url.Action("GetPeligros")', { ID: selectedCategoria }, function (peligros)
                {
                    if (peligros != null && !jQuery.isEmptyObject(peligros))
                    {
                        $.each(peligros, function (index, item)
                        {
                            peligroSelect.append($('<option />',
                            {
                                value: item.Value,
                                text: item.Text
                            }));
                        });
                    };
                });
            }
        });

        $('#deficienciaSelected').click(function () {
            var selectedCategoria = $('#deficienciaSelected').val();
            var nd = 0;
            switch (selectedCategoria)
            {
                case "1":
                    nd = 10;
                    break;

                case "2":
                    nd = 6;
                    break;

                case "3":
                    nd = 2;
                    break;

                default:
                    nd = 0;
                    break;
            }

            $('#deficiencia').val(nd);
            calcularProbabilidad();
        });

        $('#exposicionSelected').click(function () {
            var selectedExposicion = $('#exposicionSelected').val();
            var ne = 0;
            switch (selectedExposicion)
            {
                case "1":
                    ne = 4;
                    break;

                case "2":
                    ne = 3;
                    break;

                case "3":
                    ne = 2;
                    break;

                default:
                    ne = 1;
                    break;
            }

            $('#exposicion').val(ne);
            calcularProbabilidad();
        });

        $('#consecuenciaSelected').click(function () {
            var selectedExposicion = $('#consecuenciaSelected').val();
            var nc = 0;
            switch (selectedExposicion)
            {
                case "1":
                    nc = 100;
                    break;

                case "2":
                    nc = 60;
                    break;

                case "3":
                    nc = 25;
                    break;

                default:
                    nc = 10;
                    break;
            }
            $('#consecuencia').val(nc);
            calcularRiesgo();
        });

        function calcularProbabilidad() {
            var nd = $('#deficiencia').val();
            var ne = $('#exposicion').val();
            var probabilidad = nd * ne;
            $('#probabilidad').val(probabilidad);
            var interpretaNP = " ";
            switch (true) {
                case (probabilidad >= 24 && probabilidad <= 40):
                    interpretaNP = "Muy alto (MA)";
                    break;
                case (probabilidad >= 10 && probabilidad < 24):
                    interpretaNP = "Alto (A)";
                    break;
                case (probabilidad >= 8 && probabilidad < 10):
                    interpretaNP = "Mdio (M)";
                    break;
                case (probabilidad >= 2 && probabilidad < 8):
                    interpretaNP = "Bajo (B)";
                    break;

                default:
                    interpretaNP = "Bajo (B)";
                    break;
            }
            $('#interpretaNP').val(interpretaNP);
        }

        function calcularRiesgo() {
            calcularProbabilidad();
            var np = $('#probabilidad').val();
            var nc = $('#consecuencia').val();
            var riesgo = np * nc;
            $('#riesgo').val(riesgo);
            var interpretaNR = " ";
            var  colorStyle = " ";
            switch (true) {
                case (riesgo >= 600):
                    interpretaNR = "I";
                    colorStyle = "red";
                    break;
                case (riesgo >= 150 && riesgo < 600):
                    interpretaNR = "II";
                    colorStyle = "yellow";
                    break;
                case (riesgo >= 40 && riesgo < 150):
                    interpretaNR = "III";
                    colorStyle = "orange";
                    break;

                default:
                    interpretaNR = "IV";
                    colorStyle = "green";
                    break;
            }
            $('#interpretaNR').val(interpretaNR);
            $('#interpretaNR').css({ "backgroundColor": colorStyle, "font-size": "200%" });
        }

    </script>
}
