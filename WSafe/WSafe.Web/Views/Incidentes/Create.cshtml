@model WSafe.Web.Models.IncidenteViewModel

@{
    ViewBag.Title = "WSafe";
}

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">

<style>
    .detal, .tabGeneral, .tabLesionados, .tabDescrip, .tabAcciones, .tabMatriz {
        display: none;
    }
</style>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h1>Reporte de incidentes y accidentes de trabajo</h1>
        <hr />

        <div class="btn-group btn-group-justified">
            <button type="button" class="btn btn-secondary" id="general">INFORMACIÓN GENERAL</button>
            <button type="button" class="btn btn-secondary" id="lesionados">TRABAJADORES LESIONADOS</button>
            <button type="button" class="btn btn-secondary" id="detalles">DETALLES</button>
            <button type="button" class="btn btn-secondary" id="descripcion">DESCRIPCIÓN</button>
            <button type="button" class="btn btn-secondary" id="acciones">ACCIONES DE CONTROL</button>
            <button type="button" class="btn btn-secondary" id="matriz">MATRIZ POTENCIAL</button>
        </div>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="tabGeneral">

            <div class="form-group">
                @Html.LabelFor(model => model.Zonas, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.ZonaID, Model.Zonas, new { @class = "form-control", @title = "Seleccione el lugar del accidente" })
                    @Html.ValidationMessageFor(model => model.ZonaID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Procesos, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.ProcesoID, Model.Procesos, new
                    {
                        @class = "form-control",
                    @title = "Seleccione el proceso que estaba ejecuntando cuando ocurrio el incidente"
                    })
                    @Html.ValidationMessageFor(model => model.ProcesoID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Actividades, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.ActividadID, Model.Actividades, new
                    {
                        @class = "form-control",
                    @title = "Seleccione la actividad que estaba ejecuntando cuando ocurrio el incidente"
                    })
                    @Html.ValidationMessageFor(model => model.ActividadID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Tareas, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.TareaID, Model.Tareas, new
                    {
                        @class = "form-control",
                    @title = "Seleccione la tarea que estaba ejecuntando cuando ocurrio el incidente"
                    })
                    @Html.ValidationMessageFor(model => model.TareaID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FechaReporte, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.FechaReporte, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FechaReporte, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FechaIncidente, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.FechaIncidente, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FechaIncidente, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CategoriasIncidente, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EnumDropDownListFor(model => model.CategoriasIncidente, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CategoriasIncidente, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IncapacidadMedica, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IncapacidadMedica)
                        @Html.ValidationMessageFor(model => model.IncapacidadMedica, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DiasIncapacidad, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-2">
                    @Html.EditorFor(model => model.DiasIncapacidad, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DiasIncapacidad, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="tabLesionados">
            <div class="form-group">
                <div class="row">
                    @Html.LabelFor(model => model.TrabajadorID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.DropDownListFor(model => model.TrabajadorID, Model.Trabajadores, new { @class = "form-control", @id = "idLesionado" })
                        @Html.ValidationMessageFor(model => model.TrabajadorID, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4" style="display:flex">
                        <button type="button" id="addLesionado" class="btn btn-danger" title="Agregue todos los trabajadores involucrados en el incidente">Agregar</button>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div id="lesionados" style="overflow-x:auto;">
                    <table id="personsLesion" class="table">
                        <thead>
                            <tr style="background-color:gainsboro">
                                <th>
                                    Documento
                                </th>
                                <th>
                                    Nombres
                                </th>
                                <th>
                                    Genero
                                </th>
                                <th>
                                    Estado civil
                                </th>
                                <th>
                                    TipoVinculación
                                </th>
                                <th>
                                    Cargo
                                </th>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <div class="detal">
            <div class="form-group">
                @Html.LabelFor(model => model.NaturalezaLesion, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NaturalezaLesion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NaturalezaLesion, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.PartesAfectadas, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PartesAfectadas, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PartesAfectadas, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group" id="detal">
                @Html.LabelFor(model => model.TipoIncidente, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TipoIncidente, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TipoIncidente, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.AgenteLesion, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AgenteLesion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AgenteLesion, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ActosInseguros, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ActosInseguros, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ActosInseguros, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.CondicionesInsegura, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CondicionesInsegura, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CondicionesInsegura, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.TipoDaño, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TipoDaño, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TipoDaño, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Afectacion, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Afectacion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Afectacion, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.DañosOcasionados, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DañosOcasionados, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DañosOcasionados, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.TipoVehiculo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.TipoVehiculo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TipoVehiculo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.MarcaVehiculo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.MarcaVehiculo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MarcaVehiculo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ModeloVehiculo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.ModeloVehiculo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ModeloVehiculo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.KilometrajeVehiculo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.KilometrajeVehiculo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.KilometrajeVehiculo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.CostosEstimados, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.CostosEstimados, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CostosEstimados, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="tabDescrip">
            <div class="form-group">
                @Html.LabelFor(model => model.DescripcionIncidente, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.DescripcionIncidente, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DescripcionIncidente, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="tabAcciones">
            <div class="form-group" id="detal">
                @Html.LabelFor(model => model.EvitarIncidente, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EvitarIncidente, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EvitarIncidente, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AccionesInmediatas, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AccionesInmediatas, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AccionesInmediatas, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ComentariosAdicionales, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ComentariosAdicionales, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ComentariosAdicionales, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AtencionBrindada, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AtencionBrindada, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AtencionBrindada, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>

        <div class="tabMatriz">

            <div class="form-group">
                @Html.LabelFor(model => model.ConsecuenciasLesion, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EnumDropDownListFor(model => model.ConsecuenciasLesion, htmlAttributes: new { @class = "form-control", @id = "idLesion" })
                    @Html.ValidationMessageFor(model => model.ConsecuenciasLesion, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ConsecuenciasDaño, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EnumDropDownListFor(model => model.ConsecuenciasDaño, htmlAttributes: new { @class = "form-control", @id = "idDaño" })
                    @Html.ValidationMessageFor(model => model.ConsecuenciasDaño, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ConsecuenciasMedio, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EnumDropDownListFor(model => model.ConsecuenciasMedio, htmlAttributes: new { @class = "form-control", @id = "idMedio" })
                    @Html.ValidationMessageFor(model => model.ConsecuenciasMedio, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ConsecuenciasImagen, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EnumDropDownListFor(model => model.ConsecuenciasImagen, htmlAttributes: new { @class = "form-control", @id = "idImagen" })
                    @Html.ValidationMessageFor(model => model.ConsecuenciasImagen, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Probabilidad, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EnumDropDownListFor(model => model.Probabilidad, htmlAttributes: new { @class = "form-control", @id = "interpretaP" })
                    @Html.ValidationMessageFor(model => model.Probabilidad, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.EquiposInvestigador, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EnumDropDownListFor(model => model.EquiposInvestigador, htmlAttributes: new { @class = "form-control", @id = "equipoInvest" })
                    @Html.ValidationMessageFor(model => model.EquiposInvestigador, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.LesionPersonal, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EnumDropDownListFor(model => model.LesionPersonal, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.LesionPersonal, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.DañoMaterial, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EnumDropDownListFor(model => model.DañoMaterial, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.DañoMaterial, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.MedioAmbiente, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EnumDropDownListFor(model => model.MedioAmbiente, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.MedioAmbiente, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Imagen, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EnumDropDownListFor(model => model.Imagen, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Imagen, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.RequiereInvestigacion, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.RequiereInvestigacion)
                        @Html.ValidationMessageFor(model => model.RequiereInvestigacion, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Volver a la lista", "Index")
</div>

@section Scripts
{
    <script>
        // tabs de formato incidentes
        $('#general').click(function () {
            $(".tabGeneral").css("display", "block");
        });
        $('#general').dblclick(function () {
            $(".tabGeneral").css("display", "none");
        });

        $('#detalles').click(function () {
            $(".detal").css("display", "block");
        });
        $('#detalles').dblclick(function () {
            $(".detal").css("display", "none");
        });

        $('#lesionados').click(function () {
            $(".tabLesionados").css("display", "block");
        });
        $('#lesionados').dblclick(function () {
            $(".tabLesionados").css("display", "none");
        });

        $('#descripcion').click(function () {
            $(".tabDescrip").css("display", "block");
        });
        $('#descripcion').dblclick(function () {
            $(".tabDescrip").css("display", "none");
        });

        $('#acciones').click(function () {
            $(".tabAcciones").css("display", "block");
        });
        $('#acciones').dblclick(function () {
            $(".tabAcciones").css("display", "none");
        });

        $('#matriz').click(function () {
            $(".tabMatriz").css("display", "block");
        });
        $('#matriz').dblclick(function () {
            $(".tabMatriz").css("display", "none");
        });

        $('#equipoInvest').click(function () {
            var equipo = $('#equipoInvest').val();
            var colorAttrib;
            switch (equipo) {
                case "1":
                    colorAttrib = "red";
                    break;

                case "2":
                    colorAttrib = "yellow";
                    break;

                default:
                    colorAttrib = "green";
                    break;
            }

            $("#equipoInvest").css("backgroundColor", colorAttrib, "color", "black");
        });

        $('#interpretaP').change(function () {
            var valLesion = $('#idLesion').val();
            var valDaño = $('#idDaño').val();
            var valMedio = $('#idMedio').val();
            var valImagen = $('#idImagen').val();
            var valInterpretaP = $('#interpretaP').val();

            if ((valLesion == "1" || valLesion == "2") && (valDaño == "1" || valDaño == "2") && (valMedio == "1" || valMedio == "2")
                && (valImagen == "1" || valImagen == "2")) {
                $('#interpretaP').css("backgroundColor", "green");
            };

            if (valLesion == "3" && valDaño == "3" && valMedio == "3" && valImagen == "3" && (valInterpretaP == "1" || valInterpretaP == "2" || valInterpretaP == "3")) {
                $('#interpretaP').css("backgroundColor", "green");
            };

            if (valLesion == "3" && valDaño == "3" && valMedio == "3" && valImagen == "3" && (valInterpretaP == "4" || valInterpretaP == "5")) {
                $('#interpretaP').css("backgroundColor", "yellow");
            };

            if (valLesion == "4" && valDaño == "4" && valMedio == "4" && valImagen == "4" && (valInterpretaP == "1" || valInterpretaP == "2")) {
                $('#interpretaP').css("backgroundColor", "green");
            };

            if (valLesion == "4" && valDaño == "4" && valMedio == "4" && valImagen == "4" && (valInterpretaP == "3" || valInterpretaP == "4" || valInterpretaP == "5")) {
                $('#interpretaP').css("backgroundColor", "yellow");
            };

            if (valLesion == "5" && valDaño == "5" && valMedio == "5" && valImagen == "5" && valInterpretaP == "1") {
                $('#interpretaP').css("backgroundColor", "green");
            };

            if (valLesion == "5" && valDaño == "5" && valMedio == "5" && valImagen == "5" && (valInterpretaP == "2" || valInterpretaP == "3"  )) {
                $('#interpretaP').css("backgroundColor", "yellow");
            };

            if (valLesion == "5" && valDaño == "5" && valMedio == "5" && valImagen == "5" && (valInterpretaP == "4" || valInterpretaP == "5")) {
                $('#interpretaP').css("backgroundColor", "red");
            };

            if (valLesion == "6" && valDaño == "6" && valMedio == "6" && valImagen == "6" && (valInterpretaP == "1" || valInterpretaP == "2")) {
                $('#interpretaP').css("backgroundColor", "yellow");
            };

            if (valLesion == "6" && valDaño == "6" && valMedio == "6" && valImagen == "6" && (valInterpretaP == "3" || valInterpretaP == "4" || valInterpretaP == "5")) {
                $('#interpretaP').css("backgroundColor", "red");
            };
        });

        $(document).ready(function () {
            $("#lesionados").click(function () {
                var idAccidented = $("#idLesionado").val();
                $("#addLesionado").click(function () {
                    if (idAccidented != null && idAccidented != '') {
                        $.ajax({
                            type: "GET",                                              // tipo de request que estamos generando
                            url: 'GetLesionado',                                      // URL al que vamos a hacer el pedido
                            data: { ID: $("#idLesionado").val() },                                         // data es un arreglo JSON que contiene los parámetros que
                            contentType: "application/json; charset=utf-8",            // tipo de contenido
                            dataType: "json",                                          // formato de transmición de datos
                            async: true,                                               // si es asincrónico o no
                            success: function (accidented) {                           // función que va a ejecutar si el pedido fue exitoso
                                if (accidented != null && !jQuery.isEmptyObject(accidented)) {
                                    var modelo = @Html.Raw(Json.Encode(Model));
                                    var idTrabajador = accidented.TrabajadorID;
                                    var result = -1;
                                    modelo.Lesionados.forEach(function (i, item) {
                                        var id = item.TrabajadorID;
                                        if (id == idTrabajador) {
                                          result = i;
                                       }
                                    });

                                    if (result < 0) {
                                        var consulta = "";
                                        consulta += '<tr>';
                                        consulta += '<td>' + accidented.Documento + '</td>';
                                        consulta += '<td>' + accidented.NombreCompleto + '</td>';
                                        consulta += '<td>' + accidented.Genero + '</td>';
                                        consulta += '<td>' + accidented.EstadoCivil + '</td>';
                                        consulta += '<td>' + accidented.TipoVinculacion + '</td>';
                                        consulta += '<td>' + accidented.Cargo + '</td>';
                                        consulta += '</tr>';
                                        $("#personsLesion").append(consulta);

                                        modelo.Lesionados.append($({
                                            IncidenteID: modelo.IncidenteID,
                                            TrabajadorID: accidented.TrabajadorID
                                        }));
                                    }
                                };
                            },
                            error: function (XMLHttpRequest, textStatus, errorThrown) { // función que va a ejecutar si hubo algún tipo de error en el pedido
                                var error = eval("(" + XMLHttpRequest.responseText + ")");
                                aler(error.Message);
                            }
                        });
                    }
                });
            });
        });

    </script>
}