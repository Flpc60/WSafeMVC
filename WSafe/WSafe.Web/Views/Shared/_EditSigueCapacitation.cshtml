@model WSafe.Domain.Models.CreateCapacitationVM

@{
    var dateSigue = Model.InitialDate.ToString("yyyy-MM-dd");
    var dateControl = Model.EndDate.ToString("yyyy-MM-dd");
}

<div class="container" style="background-color:floralwhite">
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <label for="dateSigue" class="control-label col-md-2"></label>
                <div class="col-md-5 col-sm-10">
                    <input type="hidden" class="form-control" id="dateControl" value="@dateControl" required>
                    <input type="date" class="form-control" id="dateSigue" value="@dateSigue" required>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-3">
            <div class="form-group">
                @Html.LabelFor(model => model.StateCronogram, htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-6 col-sm-10">
                    @Html.EnumDropDownListFor(model => model.StateCronogram, htmlAttributes: new { @class = "form-control", @id = "stateCronogram" })
                    @Html.ValidationMessageFor(model => model.StateCronogram, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-group">
                @Html.LabelFor(model => model.Programed, htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-4 col-sm-10">
                    @Html.EditorFor(model => model.Programed, new { htmlAttributes = new { @class = "form-control", @id = "sigueProgramed" } })
                    @Html.ValidationMessageFor(model => model.Programed, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-group">
                @Html.LabelFor(model => model.Executed, htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-4 col-sm-10">
                    @Html.EditorFor(model => model.Executed, new { htmlAttributes = new { @class = "form-control", @id = "sigueExecuted" } })
                    @Html.ValidationMessageFor(model => model.Executed, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-group">
                @Html.LabelFor(model => model.Capacitados, htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-4 col-sm-10">
                    @Html.EditorFor(model => model.Capacitados, new { htmlAttributes = new { @class = "form-control", @id = "capacitados" } })
                    @Html.ValidationMessageFor(model => model.Capacitados, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-group">
                @Html.LabelFor(model => model.Evaluados, htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-4 col-sm-10">
                    @Html.EditorFor(model => model.Evaluados, new { htmlAttributes = new { @class = "form-control", @id = "sigueEvaluados" } })
                    @Html.ValidationMessageFor(model => model.Evaluados, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

</div>