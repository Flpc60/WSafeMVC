@model IEnumerable<WSafe.Web.Models.ListaRiesgosVM>

@{
    ViewBag.Title = "WSafe";
}
<style>
    .CommonActivitys, .ClassDangers, .EfectosPosibles {
        display: none
    }
</style>
<br />
<br />
<br />
<h4>GESTIÓN DE RIESGOS : @Session["organization"].ToString().Trim()</h4>

<div class="pull-left">
    <div class="btn-group">
        @Html.ActionLink("Ingresar Nuevo Riesgo", "Create", new { @class = "glyphicon glyphicon-plus" },
        new { @class = "btn btn-info btn-lg active" })
        @Html.ActionLink("Descargar matriz de riesgos", "PrintRiesgosToPdf", new { @class = "glyphicon glyphicon-download-alt" },
        new { @class = "btn btn-info btn-lg active" })
    </div>
</div>

<div class="pull-left" style="display:inline-flex">
    <div class="btn-group">
        <div style="background-color: red">RIESGO RESIDUAL</div>
        <div style="background-color: orange">RIESGO TRATADO</div>
        <div style="background-color: green">RIESGO CONTROLADO</div>
    </div>
</div>

<div class="row">
    <div class="col-md-4">
        NÚMERO TRABAJADORES : @Session["numeroTrabajadores"].ToString().Trim()
    </div>
    <div class="col-md-4">
        HORARIO DE TRABAJO : @Session["turnoOperativo"].ToString().Trim()
    </div>
    <div class="col-md-4">
        <input type="search" id="myInput" placeholder="Escriba un nombre de elemento para filtrar" style="width:350px">
    </div>
</div>

<br />
<div class="table-responsive-xl" style="background-color: mediumaquamarine; width:100%; margin-right:0px">
    <table class="table table-bordered">
        <tr style="background-color:gainsboro">
            <th>
                @Html.DisplayNameFor(model => model.Proceso)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Zona)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Actividad)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Tarea)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Rutinaria)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Clasificacion)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Peligro)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EfectosPosibles)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NivelDeficiencia)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NivelExposicion)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NivelProbabilidad)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NivelConsecuencia)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NivelRiesgo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CategoriaRiesgo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Aceptability)
            </th>
            <th>
            </th>
        </tr>
        <tbody id="myTable">

            @foreach (var item in Model)
            {
                string strStyle = String.Empty;
                switch (item.CategoriaRiesgo)
                {
                    case "I":
                        strStyle = "background-color:red;";
                        break;

                    case "II":
                        strStyle = "background-color:orange;";
                        break;

                    case "III":
                        strStyle = "background-color:orange;";
                        break;

                    default:
                        strStyle = "background-color:green;";
                        break;
                }
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Proceso)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Zona)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Actividad)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Tarea)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TextRutinaria)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Clasificacion)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Peligro)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EfectosPosibles)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.NivelDeficiencia)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.NivelExposicion)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.NivelProbabilidad)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.NivelConsecuencia)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.NivelRiesgo)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CategoriaRiesgo)
                    </td>
                    <td style="@strStyle">
                        @Html.DisplayFor(modelItem => item.Aceptability)
                    </td>
                    <td style="margin:initial; background-color:deepskyblue; text-align:left">
                        @Html.ActionLink(" ", "Edit", new { id = item.ID }, new { @class = "glyphicon glyphicon-edit" })
                        <a href="#" onclick="DeleteRiesgo('@item.ID')" class="glyphicon glyphicon-trash"></a>
                    </td>
                </tr>

            }

        </tbody>
    </table>
</div>

<div class="pull-left">
    <div class="btn-group">
        <button type="button" id="btnValueDangers" class="btn btn-warning" onclick="chartValueDangers()">VALORACIÓN PELIGROS</button>
        <button type="button" id="btnClassDangers" class="btn btn-warning" onclick="chartClassDangers()">CLAISFICACIÓN PELIGROS</button>
        <button type="button" id="btnCommonActivitys" class="btn btn-warning" onclick="chartCommonActivitys()">ACTIVIDADES RUTINARIAS</button>
        <button type="button" id="btnEfectosPosibles" class="btn btn-warning" onclick="chartEfectosPosibles()">EFECTOS POSIBLES</button>
    </div>
</div>

<hr />
<div class="row">
    <div class="col-md-6">
        <img src="" id="ValueDangers" class="rounded float-left" alt="..." />
    </div>
    <div class="col-md-6">
        <img src="" id="ClassDangers" class="rounded float-left" alt="..." />
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        <img src="" id="CommonActivitys" class="rounded float-left" alt="..." />
    </div>
    <div class="col-md-6">
        <img src="" id="EfectosPosibles" class="rounded float-left" alt="..." />
    </div>
</div>

@section Scripts
{
    <script type="text/javascript">

        $(document).ready(function () {
            $("#myInput").on("keyup", function () {
                var value = $(this).val().toLowerCase();
                $("#myTable tr").filter(function () {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
                });
            });
        });

        function DeleteRiesgo(ID) {
            var id = ID;
            $.ajax({
                url: "/Riesgos/DeleteRiesgo/" + id,
                type: "GET",
                contentType: "application/json;charset=UTF-8",
                dataType: "json",
                async: true,                                               // si es asincrónico o no
                success: function (result) {
                    if (result.data == false) {
                        alert(result.error);
                    } else {
                        var text = "";
                        text += "Esta seguro de querer borrar este registro ? :\n\n";
                        text += "Proceso : " + result.data.Proceso + "\n";
                        text += "Zona : " + result.data.Zona + "\n";
                        text += "Actividad : " + result.data.Actividad + "\n";
                        text += "Clasificación : " + result.data.CategoriaPeligro + "\n";
                        text += "Peligro : " + result.data.Peligro + "\n";
                        text += "Efectos posibles : " + result.data.EfectosPosibles + "\n";
                        text += "Nivel deficiencia : " + result.data.NivelDeficiencia + "\n";
                        text += "Nivel exposición : " + result.data.NivelExposicion + "\n";
                        text += "Nivel consecuencia : " + result.data.NivelConsecuencia + "\n";
                        text += "Nivel categoria riesgo : " + result.data.CategoriaRiesgo + "\n";
                        text += "Aceptabilidad : " + result.data.AceptabilidadNR + "\n";
                        text += "Nro. expuestos : " + result.data.NroExpuestos + "\n";
                        text += "Peor consecuencia : " + result.data.PeorConsecuencia + "\n";

                        var respuesta = confirm(text);

                        if (respuesta == true) {
                            $.ajax({
                                url: "/Riesgos/DeleteRiesgo/" + id,
                                type: "POST",
                                contentType: "application/json;charset=UTF-8",
                                dataType: "json",
                                async: true,
                                success: function (response) {
                                    alert(response.message);
                                    location.reload(true);
                                },
                                error: function (xhr, ajaxOptions, thrownError) {
                                    alert(xhr.status);
                                    alert(thrownError);
                                }
                            });
                        }
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert(xhr.status);
                    alert(thrownError);
                }
            });
        }

    </script>
}