@model WSafe.Web.Models.RiesgoViewModel

@{
    ViewBag.Title = "Create";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>EVALUAR RIESGO</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Zonas, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownListFor(model => model.ZonaID, Model.Zonas, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ZonaID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Procesos, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownListFor(model => model.ProcesoID, Model.Procesos, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProcesoID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Actividades, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownListFor(model => model.ActividadID, Model.Actividades, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ActividadID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tareas, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownListFor(model => model.TareaID, Model.Tareas, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TareaID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Rutinaria, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Rutinaria)
                    @Html.ValidationMessageFor(model => model.Rutinaria, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoriasPeligros, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownListFor(model => model.CategoriaPeligroID, Model.CategoriasPeligros, new { @class = "form-control", @id = "categoria" })
                @Html.ValidationMessageFor(model => model.CategoriaPeligroID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Peligros, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownListFor(model => model.PeligroID, Model.Peligros, new { @class = "form-control", @id = "peligro" })
                @Html.ValidationMessageFor(model => model.PeligroID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EfectosPosibles, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EnumDropDownListFor(model => model.EfectosPosibles, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EfectosPosibles, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NivelesDeficiencia, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EnumDropDownListFor(model => model.NivelesDeficiencia, htmlAttributes: new { @class = "form-control", @id = "deficienciaSelected" })
                @Html.ValidationMessageFor(model => model.NivelesDeficiencia, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NivelDeficiencia, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.NivelDeficiencia, new { htmlAttributes = new { @class = "form-control", @id = "deficiencia" } })
                @Html.ValidationMessageFor(model => model.NivelDeficiencia, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NivelesExposicion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EnumDropDownListFor(model => model.NivelesExposicion, htmlAttributes: new { @class = "form-control", @id = "exposicionSelected" })
                @Html.ValidationMessageFor(model => model.NivelesExposicion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NivelExposicion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.NivelExposicion, new { htmlAttributes = new { @class = "form-control", @id = "exposicion" } })
                @Html.ValidationMessageFor(model => model.NivelExposicion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NivelProbabilidad, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.NivelProbabilidad, new { htmlAttributes = new { @class = "form-control", @id = "probabilidad" } })
                @Html.ValidationMessageFor(model => model.NivelProbabilidad, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InterpretacionNP, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.InterpretacionNP, new { htmlAttributes = new { @class = "form-control", @id = "interpretaNP" } })
                @Html.ValidationMessageFor(model => model.InterpretacionNP, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NivelesConsecuencia, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EnumDropDownListFor(model => model.NivelesConsecuencia, htmlAttributes: new { @class = "form-control", @id = "consecuenciaSelected" })
                @Html.ValidationMessageFor(model => model.NivelesConsecuencia, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NivelConsecuencia, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.NivelConsecuencia, new { htmlAttributes = new { @class = "form-control", @id = "consecuencia" } })
                @Html.ValidationMessageFor(model => model.NivelConsecuencia, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NivelRiesgo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.NivelRiesgo, new { htmlAttributes = new { @class = "form-control", @id = "riesgo" } })
                @Html.ValidationMessageFor(model => model.NivelRiesgo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoriaRiesgo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.CategoriaRiesgo, new { htmlAttributes = new { @class = "form-control", @id = "interpretaNR" } })
                @Html.ValidationMessageFor(model => model.CategoriaRiesgo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AceptabilidadNR, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EnumDropDownListFor(model => model.AceptabilidadNR, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AceptabilidadNR, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NroExpuestos, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.NroExpuestos, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NroExpuestos, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RequisitoLegal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                <div class="checkbox">
                    @Html.EditorFor(model => model.RequisitoLegal)
                    @Html.ValidationMessageFor(model => model.RequisitoLegal, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-4">
                <input type="submit" value="Aceptar" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div class=" style=" display:inline-flex"">
    <div>
        @Html.ActionLink(" Controles", "GetControles", "Riesgos", new { @class = "glyphicon glyphicon-edit" },
        new { @class = "btn btn-warning btn-lg active" })
    </div>
    <div>
        @Html.ActionLink(" Intervenciones", "Index", "Aplicaciones", new { id = @Model.ID }, new { @class = "glyphicon glyphicon-edit" })
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
            $('#categoria').change(function () {
                var selectedCategoria = $("#categoria").val();
                var peligroSelect = $('#peligro');
                peligroSelect.empty();
                if (selectedCategoria != null && selectedCategoria != '') {
                    $.getJSON('@Url.Action("GetPeligros")', { ID: selectedCategoria }, function (peligros) {
                        if (peligros != null && !jQuery.isEmptyObject(peligros))
                        {
                            peligroSelect.append($('<option/>', {
                                value: null,
                                text: ""
                            }));
                            $.each(peligros, function (index, item) {
                                peligroSelect.append($('<option/>', {
                                    value: item.Value,
                                    text: item.Text
                                }));
                            });
                        };
                    });
                }
            });

            $('#deficienciaSelected').change(function () {
                let selectedCategoria = $('#deficienciaSelected').val();
                    var nd = 0;
                    switch (selectedCategoria) {
                        case "1":
                            nd = 10;
                            break;

                        case "2":
                            nd = 6;
                            break;

                        case "3":
                            nd = 2;
                            break;

                        default:
                            nd = 0;
                            break;
                    }

                    $('#deficiencia').val(nd);
            });

            $('#exposicionSelected').change(function () {
                let selectedExposicion = $('#exposicionSelected').val();
                var ne = 0;
                switch (selectedExposicion) {
                    case "1":
                        ne = 4;
                        break;

                    case "2":
                        ne = 3;
                        break;

                    case "3":
                        ne = 2;
                        break;

                    default:
                        ne = 1;
                        break;
                }

                $('#exposicion').val(ne);
                let nd = $('#deficiencia').val();
                $('#probabilidad').val(nd * ne);
                let probabilidad = $('#probabilidad').val();
                let interpretaNP = "";
                switch (probabilidad) {
                    case int p when(p >= 24):
                        interpretaNP = "Muy alto (MA)";
                        break;

                    case int p when(p >= 10 && p < 24):
                        interpretaNP = "Alto (A)";
                        break;

                    case int p when(p >= 8 && p < 10):
                        interpretaNP = "Mdio (M)";
                        break;

                    default:
                        interpretaNP = "Bajo (B)";
                        break;
                }
                $('#interpretaNP').val(interpretaNP);

            });

    </script>
}