@model IEnumerable<WSafe.Web.Models.MedicalRecomendationVM>

@{
    ViewBag.Title = "Index";
    var year = @Session["year"].ToString().Trim();
    var modelo = Model;

}

<style>

    .tabConsActions, .tabSigueOccupational {
        display: none
    }

    .centerText {
        text-align: center;
    }

    #trabajador {
        background-color: forestgreen;
        color: white;
        padding: 10px;
        border: 1px solid #000000;
        text-align:center;
        margin:0;
    }

</style>

<h4 class="centerText">SEGUIMIENTO A EVALUACIONES MÉDICAS OCUPACIONALES: @Session["organization"].ToString().Trim()</h4>
@Html.Partial("_PageHead")
<div class="container">
    <div class="row justify-content-between">
        <div class="col-md-12">
            <a href="@Url.Action("Create", "Occupationals")" class="btn btn-info btn-lg active">
                <span class="glyphicon glyphicon-tasks"></span> Crear nueva evaluación
            </a>
            <a href="@Url.Action("Create", "Acciones")" class="btn btn-info btn-lg active">
                <span class="glyphicon glyphicon-adjust"></span> Crear nueva acción
            </a>
            <a href="@Url.Action("OccupationalsPdf", "Occupationals")" class="btn btn-info btn-lg active">
                <span class="glyphicon glyphicon-download"></span> Generar matriz de seguimiento
            </a>
        </div>
    </div>
</div>

<hr class="mt-4">
<div class="table-responsive" style="background-color: azure; width:100%; margin-right:0px">
    <table class="table table-bordered">
        <tr style="background-color:gainsboro; width:auto">
            <th>
                @Html.DisplayNameFor(model => model.ExaminationDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FechaIngreso)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Document)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Trabajador)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Cargo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Age)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Talla)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Peso)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ExaminationType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Recomendations)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MedicalRecomendation)
            </th>
            <th></th>
            <th></th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>

                <td>
                    @Html.DisplayFor(modelItem => item.ExaminationDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FechaIngreso)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Document)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Trabajador)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Cargo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Age)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Talla)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Peso)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ExaminationType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Recomendations)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MedicalRecomendation)
                </td>
                <td style="margin:initial; background-color:deepskyblue; text-align:left">
                    <a href="#" title="Seguimientos" onclick="mostrarSeguimientos('@item.ID');">
                        <span class="glyphicon glyphicon-forward"></span>
                    </a>
                </td>
                <td style="margin:initial; background-color:deepskyblue; text-align:left">
                    @Html.ActionLink(" ", "Edit", new { id = item.ID }, new { @class = "glyphicon glyphicon-edit", @title = "Actualizar" })
                </td>
                <td style="margin:initial; background-color:deepskyblue; text-align:left">
                    <a href="#" title="Descartar" onclick="deleteOccupational('@item.ID')"><span class="glyphicon glyphicon-trash"></span></a>
                </td>
            </tr>

        }

    </table>

</div>

<div class="tabSigueOccupational">
    <div class="container">
        <div>
            <p id="trabajador"></p>
        </div>
        <div class="table-responsive" style="background-color: azure; width:100%; margin-right:0px">
            <table class="table table-bordered">
                <tr style="background-color:gainsboro; width:auto">
                    <th>
                        FECHA
                    </th>
                    <th>
                        RESULTADO
                    </th>
                    <th>
                        RECOMENDACIONES
                    </th>
                    <th></th>
                </tr>

                <tbody id="seguimientosBody"></tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts
{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
        });

        function mostrarSeguimientos(occupationalId) {
            $('#seguimientosBody').empty();
            var seguimientos = JSON.parse('@Html.Raw(Json.Encode(Model))');

            var seguimientosFiltrados = seguimientos.filter(function (detalle) {
                return detalle.ID == occupationalId;
            });

            if (seguimientosFiltrados.length > 0 && Array.isArray(seguimientosFiltrados[0].SigueOccupational)) {
                var seguimientosArray = seguimientosFiltrados[0].SigueOccupational;
                var trabajador = "TRAABAJADOR: " + seguimientosFiltrados[0].Document + " - " + seguimientosFiltrados[0].Trabajador + " - " + seguimientosFiltrados[0].Cargo;
                document.getElementById("trabajador").innerHTML = trabajador;

                for (var j = 0; j < seguimientosArray.length; j++) {
                    var detalle = seguimientosArray[j];
                    var sigueDate = moment(detalle.SigueDate);
                    var formattedDate = sigueDate.format('YYYY-MM-DD');

                    $('#seguimientosBody').append(`
                                <tr>
                                    <td>${formattedDate}</td>
                                    <td>${detalle.Resultado}</td>
                                    <td>${detalle.Recomendations}</td>
                                    <td style="margin:initial; background-color:deepskyblue; text-align:left">
                                        <a href="#" title="Cerrar" onclick="ocultarSeguimientos();">
                                            <span class="glyphicon glyphicon-remove"></span>
                                        </a>
                                    </td>
                                </tr>
                            `);
                }

                $('.tabSigueOccupational').css('display', 'block');
            } else {
                console.log("SigueOccupational no es un array o no está definido o los IDs no coinciden.");
            }
        }

        function ocultarSeguimientos() {
            // Oculta la tabla de seguimientos
            $('.tabSigueOccupational').css('display', 'none');
        }

    </script>
}
