@model WSafe.Domain.Models.CrtVulnerabilityVM

@{
    ViewBag.Title = "Create";
}

<style>
    .tabInterven, .capInterven, .tabPeligros, .tabEvalRiesgos, .tabMediAplica, .consInterven, .tabIntervencion,
    .tabAddInterven, .tabIncidents, .tabAddPlanAcc, .tabGesPlanAcc, .tabAddControl, .tabAddControlTrace, .tabAddMainCause {
        display: none;
    }

    .centerText {
        text-align: center
    }

    .container {
        display: flex;
        flex-direction: column;
        align-items: center;
    }
</style>

<h4 class="centerText">GESTIÓN DE AMENAZAS</h4>
<div class="container">
    <div class="row justify-content-between">
        <div class="col-md-12">
            <button type="button" class="btn btn-success" id="idPeligros" title="doble click para cerrar la ventana">1. IDENTIFICACIÓN AMENAZAS</button>
            <button type="button" class="btn btn-success" id="mediAplica" title="doble click para cerrar la ventana">2. MEDIDAS DE INTERVENCIÓN</button>
            <button type="button" class="btn btn-success" id="mediAplica" title="doble click para cerrar la ventana">3. PLANES DE ACCIÓN</button>
            <button type="button" class="btn btn-success" id="mediAplica" title="doble click para cerrar la ventana">4. PLAN OPERATIVO NORMALIZADO</button>
        </div>
    </div>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>CrtVulnerabilityVM</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Types, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Types, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Types, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryAmenaza, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.CategoryAmenaza, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryAmenaza, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AmenazaID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AmenazaID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AmenazaID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EvaluationConceptID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EvaluationConceptID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EvaluationConceptID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Response, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Response, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Response, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Observation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Observation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Observation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
